<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/4gHYSUNDX1BST0ZJTEUAAQEAAAHIAAAAAAQwAABtbnRyUkdCIFhZ
        WiAH4AABAAEAAAAAAABhY3NwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA9tYAAQAAAADTLQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlkZXNjAAAA8AAA
        ACRyWFlaAAABFAAAABRnWFlaAAABKAAAABRiWFlaAAABPAAAABR3dHB0AAABUAAAABRyVFJDAAABZAAA
        AChnVFJDAAABZAAAAChiVFJDAAABZAAAAChjcHJ0AAABjAAAADxtbHVjAAAAAAAAAAEAAAAMZW5VUwAA
        AAgAAAAcAHMAUgBHAEJYWVogAAAAAAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAA
        AAAAACSgAAAPhAAAts9YWVogAAAAAAAA9tYAAQAAAADTLXBhcmEAAAAAAAQAAAACZmYAAPKnAAANWQAA
        E9AAAApbAAAAAAAAAABtbHVjAAAAAAAAAAEAAAAMZW5VUwAAACAAAAAcAEcAbwBvAGcAbABlACAASQBu
        AGMALgAgADIAMAAxADb/2wBDAAMCAgICAgMCAgIDAwMDBAYEBAQEBAgGBgUGCQgKCgkICQkKDA8MCgsO
        CwkJDRENDg8QEBEQCgwSExIQEw8QEBD/2wBDAQMDAwQDBAgEBAgQCwkLEBAQEBAQEBAQEBAQEBAQEBAQ
        EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBD/wAARCAH0AfQDASIAAhEBAxEB/8QAHQABAAMA
        AwEBAQAAAAAAAAAAAAYHCAQFCQMBAv/EAFIQAAEDAwIDBQIHCggMBwAAAAABAgMEBREGBxIhMQgTIkFR
        FGEVFiMyUnGBGDdCV2J1kZXR0xczU3KSk6HBJCY2Q1V0grGys8PwCSVWc6PS4f/EABwBAQACAgMBAAAA
        AAAAAAAAAAABAgMHBAUGCP/EADoRAQABAwIEBAMFBgUFAAAAAAABAgMRBCEFEjFRBkFhcRMygRYikZLR
        ByNTocHSFXKiseEUQlKC8P/aAAwDAQACEQMRAD8A8qgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB9qGiq7lW09ut9NJUVVVKyCCGNvE+SRyojWt
        ROqqqoiIWXvhsVeNmZbI6rqFrKa50UayzNTLYq1rUWaJF82oq5aq4VUz6KWh2Kdokvd9n3UvdLxUVnet
        Pa2vbykq1Txy+9I2rhOWOJ+UXLDS28m3dBujoy56Tq1YyaVqTUU7kz3FS1Pk3/VzVq/kucnmZKaMwrM4
        eZAOVdbZX2S51VnulM+nrKKZ9PPE9PEyRqqjmr9SocUxrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdlpmxzam1FbNOU9TDTy3OrhpGSzOwyNZHo3id
        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
        9Ft1pbTut9IQSPtawttl0VebkqW5RlQ707xEVFxhEcifSRCV9kXbD4MtU+5d4psVNxa6mtjXt5x06L45
        U59XuTCckXhauFVHmspNKWfXe3lfpC/wd9QXSGWmmTlluVyj256Oa7DkXyVEU97wTwpTrOF11XoxcuRm
        me2On5vP0mGtvEHjOvQ8Yt02JzatTiuI/wC7Pzfl8vWJ8nkyEVUXKLhUJDuFoe87b6zuuir6zFXa51i4
        0bhs0fVkrfyXNVrk9ykeNeXLddmubdyMTE4mO0w2fau0X7dN23OaaoiYnvE9G19ktxE3C0ZDUVk6Ou1u
        xS16ZTic5E8MuPR6JnoicSPROhaViuXwdXNc92IZPBJ7k8l+z9pg/ZvcKTbvWdPcZ5XJbKzFLcGJnHdK
        vKTCZyrFw7kmccSJ8426x7JGNkje17HIjmuauUVF6Kil6ZzC0wn17s1t1JZq2w3embUUNwgfTzxr+Exy
        YXn5Lz5L5LzPNPc3QVy201rctIXLid7JJmnmVMJPA7nHIn1txn0VFTyPSDTFy9rpPZJXfK06YT3s8v0d
        P0FO9rjaj46aMTWdopuK76bY6SRGt8U9F1kb71Z89Pdx+ak1xzRlETiWGQAYFwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAdjjZv+EjcNup7zS8dh0s9lVKj25ZUVWcwx
        c+SoipxuTnyaiL845nD9Dd4lqaNLZ61Tj27z9I3cDifELPCtJc1l/wCWmM+/aPeZ2at7KOzabTbbxVF1
        pe71DqFGVtx4m4fC3HyUC/zGuVVT6T3+WCxdY3Xuom2yF3ilTilVPJvkn2/99Tv62sioKWSrmXwxtzj1
        XyT7SFUtnuuoKl9bKndsldxLK9OX+ynmb/0+lt6DTUaTTxtTGP1n6+b5p1WsucS1Vet1M71Tn9Ij0iNo
        R243CitNvqbrcqhlPSUcL555X/NjjYiuc5fciIqnnjunr+t3L1rX6pquNkMru6ooHL/EUzc92zqqIvVz
        scuJzl8z1YoNOWuhiWNaZk7nJhzpWo7P2LyRD7/Atm/0TRf1DP2HS8d8PXuNW6bUXuSmN5jGcz5ecdHf
        +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
        uyxat01c8UxnGM48u3t6LQ3l1dp256f2/wBEaSuTK236WsDW1MjGPY34RqHrJVInEiZTiRvNOS8yMLub
        rF2l7dpB1xiWhtKTsoXrTRrPTRzrxSxsm4eNrHL1RF5oqp0VUWLA5N7XXrt2q7E8uYiNsxGIiIiPaMR+
        Di2OH2LNqmzMc3LM1ZnEzmZmZn3nM/ikmrtxNWa31AmqL9cWLckkSdJqaBlP8snD8riNETjXgbl3XwtT
        OERE5OsN09Y65knnv9TQuqKxGJW1NNb4Kaas4cY76SNjXSfNauFXGWouMoikSBjq1d+rmzXP3t53nefX
        uy06LTUcnLbiOTanaNo7R26R+CWWbdHV9k0q7RUM9BV2b2pa2Gmr7dT1baeoVvCskXesdwKqclxy5ryy
        qkYqqqprqmWsraiSeed6ySSSOVznuXqqqvVT5ApXeuXKYprqmYjpmei9vT2rVVVdumImd5xHX3AAYmYA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/
        /9k=
</value>
  </data>
</root>