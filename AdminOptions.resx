<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/4gHYSUNDX1BST0ZJTEUAAQEAAAHIAAAAAAQwAABtbnRyUkdCIFhZ
        WiAH4AABAAEAAAAAAABhY3NwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA9tYAAQAAAADTLQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlkZXNjAAAA8AAA
        ACRyWFlaAAABFAAAABRnWFlaAAABKAAAABRiWFlaAAABPAAAABR3dHB0AAABUAAAABRyVFJDAAABZAAA
        AChnVFJDAAABZAAAAChiVFJDAAABZAAAAChjcHJ0AAABjAAAADxtbHVjAAAAAAAAAAEAAAAMZW5VUwAA
        AAgAAAAcAHMAUgBHAEJYWVogAAAAAAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAA
        AAAAACSgAAAPhAAAts9YWVogAAAAAAAA9tYAAQAAAADTLXBhcmEAAAAAAAQAAAACZmYAAPKnAAANWQAA
        E9AAAApbAAAAAAAAAABtbHVjAAAAAAAAAAEAAAAMZW5VUwAAACAAAAAcAEcAbwBvAGcAbABlACAASQBu
        AGMALgAgADIAMAAxADb/2wBDAAMCAgICAgMCAgIDAwMDBAYEBAQEBAgGBgUGCQgKCgkICQkKDA8MCgsO
        CwkJDRENDg8QEBEQCgwSExIQEw8QEBD/2wBDAQMDAwQDBAgEBAgQCwkLEBAQEBAQEBAQEBAQEBAQEBAQ
        EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBD/wAARCAH0AfQDASIAAhEBAxEB/8QAHQABAAID
        AQEBAQAAAAAAAAAAAAcIBAUGCQMBAv/EAFQQAAIBAwIDBAQHCQsLAwUAAAABAgMEBQYRBxIhCBMxQSJR
        YXEUFRYjMlKBN0JicnWCkbPRGDZDV3OSlbK0wdMXJjM0U1V0k6HD8AkkJUVWoqPh/8QAHAEBAAICAwEA
        AAAAAAAAAAAAAAECAwcEBQYI/8QAOhEBAAEDAgQEAwUGBQUAAAAAAAECAxEEIQUSMVEGQWFxEzKBFiKR
        ktEHI1OhwdIVcqKx4RRCUoLw/9oADAMBAAIRAxEAPwDyqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH2sbK7yV7b47H21S4urqrChQo04806lST
        SjGKXi22kkSXxw4FZjgzVwkru4d5bZOypurWit40r2MU61JPzim94t7Nrf1MlDsU8Ilm87X4qZu15rLD
        zdvi4zj0qXbXp1faqcXsum3NPdPeBZbjJw7sOKOjMnpO7cIVqsVWsq8lv3FzFfNz93Vxf4MpLzMlNGYV
        mcPMgGVlcZf4TJ3WHyltO3vLKtO3r0pr0oVItqUX7mjFMawAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGy0zg62ptRYzTlvc0berk7ujaQq1pbQpupNR
        5pexb79Or8uprT9hOdOcalOcozi1KMovZprwaYHqJpGWidAaWxukMDXassVQjQpqNJ8034ynJpJOUpOU
        pPzcmzb22UtcspXVo5cvNytSWzTSIA4NcQocRNGW+QuKsXlLPa1yEE1v3qXSpstuk1tLw235kvoknYDJ
        fF16lUltRrbQn7PU/s/acimVJV67Z3Cj4JeUOK2FtvmbpwtMvGC6RqpbUqz/ABkuRvw3jDzkVZPVDUmn
        sVqzAX+ms3b9/Y5KhO3rw8HyyXin5ST2afk0meaPELROU4d6wyWkMum61hWcYVdto1qT6wqR9kotP2dV
        4ox3KcTlNMudABjWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAABfHgT2OeHdXhxjspxW0tUyGeyi+GzhO9uaHwSlNLu6PLSqRXMo7Slut1KTXkiQH2POzhF
        OUuHaSXVt5e/6f8A7z2mn8CcT1Fmm9zUU80ZxM1ZjPfFM7vA6r9o3CdLfrsctdXLMxmIpxOO2ao2+ihn
        BXiJPh5rOhdXVZrFZDa1yEd3tGDfo1dl5wfXwb5XJLxLsxlGUVKMk01umn0aMTUPZ27LOBsrm9noKm6V
        pSnWr155m/VKlCKblKUu+8Ek30I74K8UcBranktO4nHRxlLDVHHG2bqznL4uT5aTbnOUnKPSMurS3h16
        nV8V4Df4JFMaiumZq6RTMzO3nvEbO64H4l0/iCa/+mt10xTjM1RERv5bVTusFprJfDbP4PVlvVt0ovfz
        j5P+4hHtgcKPlXpSGv8AD2vNlNPU2rpRXpVrLfeXv7tty/Fc/YSLjb6eOvKd1DdpPaa+tHzR3rVve2zU
        owrUK8NnGS3jOLXg0/FNHUY5ow9B0nLyhBJPH7hbV4VcQbvF21GSxF/veYub3a7mT609/XB7x9e3K/Mj
        Y48xjZkAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        Tt2QuDf+VDiNTzWYte80/pmULy7U16NevvvRo+1NxcpLw5YNP6SIRx2OvsvkLbFYy1qXN5eVoW9vRpre
        VSpOSjGKXrbaR6o8DOFdjwe4c47SNBU53u3wrJV4L/T3c0ud7+aWyhH8GEfM9b4Q4N/imti7cj93b3n1
        nyj+s+kerxXjjj3+D8Pm1an97dzEekec/wBI9Zz5O5vLqlZWtS6rPaFOO79vqRH+SzmQykmq9Zxp79Kc
        OkV+37Ta6xyvfV44yjL0KT5qm3nLyX2f3+w4HWWq8XofTGR1VmJNWuOouq4p7SqS8IU4/hSk4xXluzb+
        qv024mqqcUxvM+3VozR6aq7VTTRGaqpxEe/RBHa64ofFuMocNMPcJXOQjG5ycoS606CfzdL3zkuZ9U1G
        K8VMrXoXV9/oXVNjqbH7yla1PnaSlsq1J9J0371vs9ns9n4pGJqfUeU1fqC/1Nmq3e3uRryrVWt+WO/h
        GO7bUYraKW/RJI1hojjPE6+K6yrUT06Ux2iOn6z6y+j+A8Jo4NoaNNHzdap71T1/SPSHoZh8tYZ7FWma
        xddVrS9owr0Zpbbwkt1uvJ+tPqn0Oz0pkuaMsbVl1jvKlv6vNf3/AKSpXZb4itSrcOMpX6PnusW5Pwf0
        qtJdffNJL/abvwLI0K9S2rQuKMtp05KSZwaZzu7aYY3aJ4VR4p8Pri0sqEZZrFc15jJbdZTS9Oj7pxW3
        q5lBvwPO6cJU5OE4uMovZprZp+o9WrG8p39rTuqXhNdV6n5opD2ueFHyM1mtaYi25cRqScp1FGPo0L3x
        qR9imvTXt5/JEXKfMpnyQEADCuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAdBoDROZ4jaxxWi8DT5rzKXCpKTW8aUPGdSX4MYqUn7EXt2671cW7cZmZxEd5lju3aL
        Fuq7cnFNMZme0R1WT7CvBv44zdxxdztrvZ4mUrXExnHpUumvnKq38VCL2T+tJtbOBdfM5KGLsJ3L2c36
        NNPzk/D9v2GFovSOH0FpTF6PwFHurDFW8bekn9KW3WU5beMpScpN+bkznNTZX4xv3TpS3oUN4Q28G/N/
        +eo33wbhtHBNBTp6fm61T3qnr+HSPSHzZx3i1fiDiVeqq+TpTHamOn49Z9ZlqZzlUnKpOTlKTbbfm2U+
        7WvE9Z/UFLh7iLhSsMLPvb6UGmqt41ty7r/ZxbXj9KU016KLDcZuI9DhjoW8z8ZQeQrf+1x1KS357iSe
        za84xSc3v4qO2+7R59XFxcXlxVu7uvUrV685VKtSpJylObe7k2+rbb3bPG+NOLfCtxoLU71b1e3lH1/2
        93vPAPBPjXZ4lej7tO1Pv5z9I2959HzABrNttlYvJ32FyVrl8ZXdC7s60K9Golvyzi909n0fVeD6F7dA
        6ysde6UsdS2PLB3MNq9FS3dGtHpOD9z8G9t00/MoQTD2beIr0tqr5LZKu1jM7ONOHM3tSuvCEl6ub6D6
        ePI29ol6JxKJXT0vkvg1y7KrLanXfo7+U/8A++H6D7cTNB43iVorJaQyfLFXlLehWa3dCvHrTqL3S239
        abXmc6m0002muqaO7wmRWSsY1JP52HoVF7fX9pmjfZSe7y6zuEyWm8ze4DMW0re9x9edvXpv72cXs/ev
        U/NbMwS2XbQ4Ubq34r4W16rks8woL82jWf8A0pt/yftKmnHqjlnC8TkABCQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvj2G+DXya0xW4qZ205cln6fc42M49aNinu5r1
        OpJJ/ixi10kyq3Z/4TXPGLiTYaZlCosXQfwzK1o9O7tYNc0U/KU21Bepy38Ez1JoULPF2NO2tqNK2tLS
        kqdOnCKjCnTitkkl4JJbbew2J4E4N8a7PEr0fdp2p9/OfpH859Grv2jce+BZjhVifvV71elPlH1n+Udp
        a3VGV+LrB0aUtq1xvGPrjHzf/nrOCM3MZGeUv6l1LdQ+jTi/KK8P2/aQb2nuJ/yG0S8Bi7nkzGoYzt6b
        i/So23hVqextNQXg95Np7xPe8T19vRWK9Td+WmPx7R9Z2a24Tw27r9RRpLPzVz+HefaI3V17RXE9cSNd
        VKeOuFUwuF57SwcXvGq9/nKy2b355JbPzjGHRPciwA0PrNVc1t+rUXZ+9VOf/vbo+kNDo7XD9PRpbMYp
        pjEfr7zO8tppbTWU1hqLH6YwtHvLzI140aae/LHfq5y2TajFJyb26JNk69pTs72XDrS2ndb6QoVJ4t0Y
        4zKN9ZK5juoXEvV3iTT22Skl9ZI6vsi8MPizFV+JeYttrnIxlbYyM49adun6dVdfGclsuifLF7NqZbKp
        pTD674eX+kM/Q76wylGrbVl03ju91OO/hKMtpJ+TSZ73gnhSnWcLrqvRi5cjNM9sdPzefpMNbeIPGdeh
        4xbpsTm1anFcR/3Z+b8vl6xPk8mQm0909mjoeIWh8zw31nldFZ2G13i67pc6jtGtT8YVY/gyi4yXsZzx
        ry5brs1zbuRiYnEx2mGz7V2i/bpu25zTVETE94nouvwS4iLiFoyjcXldSy2O2tb9brmlJL0au3qmlv4J
        cyml4EpYLJfF19GU5bUanoVPYvJ/Z+0ofwb4hVOHes7fI16sljLza1yEFvt3TfSpst93B7S6LfbmS+kX
        dhOFSEalOcZwklKMovdNPwaZemcwtMO+zeGxupMNe4HL20bixyFCdvXpv76Els+vk+vR+T6nmnxN0Fku
        GmtclpDJc0vglTe3rNbKvQl1p1F747b+ppryPSDTGS+F2nwSrL523Wy9sPL9Hh+gh3tccKPlpoxazxFt
        zZfTcJVKijH0q9l41I+1w+mvZz+bJrjmjKInEqMgAwLgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAWA7HHBv/KRxDjqfM2vPgdLThdVVOO8Li633o0uvRpNc8l16RSf0jmc
        P0N3iWpo0tnrVOPbvP0jdwOJ8Qs8K0lzWX/lpjPv2j3mdlreyjwbXCbhvSuMra93qHUKhe5HmjtOjHb5
        qg/xIyba+tOflsSLrHK91SjjKMvSqrmqteUfJfb/AOeJv728pWFrUu6z9GnHfb1vyX2nFWuHyuoLmd7V
        Xdwqy5nVmun5q8zf+n0tvQaajSaeNqYx+s/XzfNOq1lziWqr1upneqc/pEekRtDncjkLLE4+5yuSuIW9
        pZ0Z169Wf0adOCcpSfsSTZ548U9f3vEvWt/qm654Uasu6sqEn/oLaO/dw8Wk/GUtunNKT8z1YsNOYuxp
        Om7aFeUltKVWKlv9j6JH3+JcN/umy/5EP2HS8d8PXuNW6bUXuSmN5jGcz5ecdHf+HPE9jgFyu9Nj4lUx
        iJ5sYjz8p6/0eOh2HCbh9d8TNcWGmKPPC2k+/vq0PGjbQa55b7PZvdRjutuaUd+h6t/EuG/3TZf8iH7D
        GyOnsdc2VWja2NvQqtbwnTpxi+ZeHVLwPPWf2exbuU13L/NTE7xy4z6Z5p6vT6j9p83bVVFrT8tUxiJ5
        s4nvjljOEc2NlaY2yt8dj7eFva2tKFChSpraNOnFJRil5JJJEjaXtqtth6Uay2dRuol6k/A5TA4meRyS
        o1oNU6D5qya9T+j9r/vO4yORscPjrnK5O5p21nZUZ3FxWm9o0qcIuUpP2JJs2BYpiiOadohrPUVzcq5Y
        3mVPP/UHwWkqcNL6jVzGlqWtKpaOjGO7r2UVzc835ck5JR9feS+r0pmd9xy4p33GDiNktX13UhZOXwbG
        0J/wFpBvkjt5N7ucvwpy8tjgTRHiDXWuI8Ru6ixGKZnb1xtn69f+X0b4Z4fe4XwqzpdRVmqI39M78v0z
        j/gLX9mfiL8o9Nz0bkq3NkMHTXcOT61bTfaPn949ovokk6fi9yqBu9FasyGiNT2Gpsb6VWzqbzp82yrU
        30nTb2eylFtb7dOjXVI6emcS72XoLj72pj7undU+vK/SX1o+aO+pzo3VCNSO06VWO/VbppkV4PNY7UWI
        s85ia6rWd9RjWpTX1WvBrya8GvJpo7PSeS+ljasvXKlv/wBV/f8ApOREqSon2ieFcuFnEG4tLGg44XK8
        15jJbejGDfp0ffCT29fK4N+JFx6M8f8AhbT4q8PrvF21KLy9hveYub2T76K609/VOO8fVvyv7086KtKp
        QqTo1qcqdSnJxnCS2cWujTT8GYa6eWV4nL+QAUSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAADLxGJyOeytnhMRaVLq+v68La2o01vKpUnJRjFe9tHqVwm0HguCHDfGaRVem69KH
        f31WC9K5u5pd5NLxa3Sit/CMYp+B5w8HuJFvwo1lT1nLTVHM3VrQqU7SFWv3St6s+ner0ZbyUeZLdbel
        v4pE0Vu3BkLio61fh7CpOXjKWWbf6o9x4S4jwzhEV6jVV4uztG1U4j6R5z/s17424XxfjdVGl0dvNmne
        Z5qYzV9ZjaI/nPpC4OS1VVvasVTs6Xc05c0Y1U5bv1tb7fYfnyyy66KFv/Mf7Snn7tm6/i4pf0q/8Efu
        2br+Lil/Sr/wT2H2x4VnPxv9NX6PC/YXjOMfA/1U/wBy4nyyy/1bf+Y/2j5ZZf6tv/Mf7Snf7tm6/i4p
        f0q/8Efu2br+Lil/Sr/wR9seF/xp/LV+h9heMfwI/NR/cuJ8ssv9W3/mP9o+WWX+rb/zH+0p3+7Zuv4u
        KX9Kv/BH7tm6/i4pf0q/8EfbHhf8afy1fofYXjH8CPzUf3Lt6VylO+ldKpSp07mc+9k4LZTW22/2f3la
        +3Xxk+KMLb8IsFdbXmVjG6y8oS607ZPenS6eDnJczX1YpdVMj+y7c2Sx9xG7teHVBVIb7c2Ubi/Y13S3
        RXbWmrszrzVWU1hqCv3t/lbiVxVa35Y79Iwjv4RjFKKXkopHS+IfF2m1GgnTaGvNVe0ziYxT59Yjr09s
        vQeF/BGr03EY1fEaIimjeIzE5q8ukztHX3w0oANYtuAAAsJ2XOIroXNbh1lK77uu5XOMcm3yzS3qUl6k
        0udLot1PxckWXo1qlCrCtSlyzg1KL9p514+/vMVf22Tx9eVC6tKsK9GpHxhOLTi1v6mkT9S7Xl6qUFW0
        JQlUUVzyjkHGLl5tJ03svZu/eZKasRiUTC4eN1Pa3W1K8SoVX5t+g/t8vtKd9r/hStKathr7D23LitRV
        G7lQXo0b3beX/MW81+Ep+w/v917c/wD2DT/pN/4RrdZdqGWtdH5HRuT0JRdrfUuWEp5BzdvVXWFSHza2
        cZJPbdJ9U+jZNVUVRhERhBQAMSwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAy7HEZbJxnPG4u7u402lN0KEqii34b7J7Hyu7K8x9Z21/aVraqkm6dam4S2fg9n1Lf9nHS3yb
        4b21/Xhy3ObqO+nv4qm/RpL3cqUvzzgO1lpTu7rEa0t6fo1YvH3LS6cy3nTfva7xfmotNOIyjKvIAKpf
        ewx9/lLunYYyyuLu5q7qnRoU5VKk9lu9oxTb6Jv7DfrhjxHlHnWg9Qbfk6tv+jlN/wBnr7sOn/fdf2Wq
        Wc4m8VcRwvpY6tlsbeXccjOpCHwbl3jyKLe/M19ZFopiYzKJlSrJ4TM4WoqOYxF7YVH4QubedJv7JJGG
        XU0pxV4bcWYVMBCCnWqwbljsnbx3qRS68q3lGW3Xonv57EIcfODFroWpT1PpmnNYa7q91VoNuXwWq+q2
        b68j2e2/g+m/VCadswZQ0ACqWfaafz1/Rjc2OEv7ilNtRqUrac4yaez2aWz6mDKMoScJxcZRezTWzT9R
        crs4/cjxP8rdfr5kNdpThz8mtSR1djKHLjs3NusorpSuvGS901vJe3n9haacRlGUNQhOpONOnBynJqMY
        xW7bfgkjPudOahs6M7i7wWRoUqa3nOpazjGPvbWyJW7NPDv5Samlq7JUObH4SadFSXSrdeMV+YvS9/IT
        vxy+5PqP/ho/rIExTmMmVIgAUSzLLDZjJU5Vsdiry6pwlyylRoSmk/U2l4nwurS6sa8rW9tqtvWhtzU6
        sHCUd1ut0+q6NP7Sz/ZL/efmfyn/ANqBD3aB+6/qD8a3/s1ItMYjKEeH9U6dStUjRo05TqTkoxjFbuTf
        gkvNn8m90H+/nTv5WtP10SqWsvsVlMZyPJY26tO835O/oyp823jtuuvijFL0cU9AWnEXSNzhKnJC8p/P
        2NaX8HXS6bv6susX7Hv4pFHb2yu8beV8ffUJ0Lm2qSpVqc1tKE4vZp+1NFqqeVETlk1dPZ+hQldVsHkK
        dGMeeVSVtNRUfW21tsYBdXiA3/kOyT3/APocP6kSlQqjBAACqQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAA22kdPXGq9T4zTltup5C5hRcl95Bv0pfZHd/YaknXsp6U+H6kyOrrilvSxdH4PQ
        bX8NV8WvdBNP8dExGZwJL7QGp/kLw5tsbhKnwW4ubiha2qg9nSp0tptr2JQjH843Gr7C34s8IKtSypqV
        TJY+F9aRXVxrxSnGHv5k4P3s2eueGGleIlSzqampXVX4DGaoxpV3TjHn25nsvFvlX6Db6V0xi9HYO309
        hlWVnaufdRq1HOUVKTk1u/Ldsy43Vefvh0YO5416U+SHEfK2FKlyWt1U+HWvTZd3V3ey9ilzR/NOGMM7
        LJF7PX3YdP8Avuv7LVJO7Xf+oaY/lrr+rTIx7PX3YdP++6/stUk7td/6hpj+Wuv6tMvHyyiequ+Iyl7h
        MpaZjHVnSurKtCvSmvKUXuvsLrcU7e21Bwkz1SpBOnUxU72Cfk4RVWP/AFiimeldNZPV+oLLT2JoyqXF
        5VUN0t1Tj99OXqjFbt+4uDxsy1ppbhNlqPOo/CLaONt4t9ZuouTZe6HM/dFinpJKlIAKJXL7OP3I8T/K
        3X6+ZsI1tP8AGzQOSxdZRg5VKtlXj4ytbqnL0Zr7VGS9aez8zX9nH7keJ/lbr9fMg7hfxIegOKOSp39f
        lw+Vvqtvebv0ab7yXJV/Nbe/4Ll7DLnEQqnPMXmJ4CcJY0LJwncW1LuLfddbm9mm3NrzW/NJr6sdvUbD
        jj9yfUX/AA0P1kCuvaE4iLWusJYzHXHPisK5W9Fxe8atXf5yp7VulFP1R3XiWK44/cn1F/w0P1kBE5yK
        RAAxLLSdkv8Aefmfyn/2oEPdoH7r+oPxrf8As1ImHsl/vPzP5T/7UCHe0D917UH49v8A2ekXn5YR5o9N
        7oP9/OnfytafromiN7oP9/OnfytafrolISvJqHU2M0xCwrZap3VG/vadhGq3tGE5xk4uXsbilv5b7+BA
        /ae4Z8k48RsNb+jJxo5SEF4PwhW+3pF/m+tnXdqX7mlL8qUP6lQ/vghr6y4n6KuNKal5LnIWVD4Ld06r
        3+FW0lyxqP1vb0ZP17P75GWd55VfVu+IP3Dsj+Q4f1IlKi8HFe1p2PCPPWVFydO3xjpQcn12iklv+go+
        VrTAACiQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtxwTzOgdFcN7C0utY4Kne3EZ
        X95T+MKPeKpNb8rjzb80YKEWvHdMqOCYnA3GpdT5HUWoMjna1zWhK/uqlxyd4/QUpNqK9iWy+w7vs+a6
        p6W19CGaykaGOyVvUtq1W5rctKlJenCUnJ7LrHl3/DIsAicTkWG7Tlzo7U2LxeodP6ow1/fWNWVtWpWt
        9Sq1JUZrdPljJtqMo/8A5sryAJnM5He8CMhYYritgr7J31vZ21N3KnWr1Y04R3t6qW8pNJbtpL2tFqNW
        4ThhxAtraOp7rG39Kzcp0JRyLpqDltu96c1vvsvEo0CYqxGETC5FLU3ArhHZ1vie7xNvVktp07Gfwq5q
        eqMpJyl/OaRXXi3xayXE/KU33ErPFWTfwS15t3u/GpN+Dk/0JdF5t8CBNWdjAACqVsuAOtNHYjhhi8dl
        tWYayu4VLhyoXF/Sp1I71ptbxlJNbpplXNQ1KdbP5OrSnGcJ3laUZRe6knN7NPzRgAmZyBcLjLrjRWS4
        Z57HY7V+EurqtbxjToUchSnUm+8i9lFS3fgU9AicAACBZDsw6r0vgNK5a3zupMVjatTIc8Kd3eU6MpR7
        uK3Sk02t14kU8ccjj8txTzmQxV/b3trWlQ7uvb1Y1Kc9qFNPaUW09mmvejhQTM5jAG60TXoW2s8Dc3Ve
        nRo0snazqVKk1GEIqrFuUm+iSXVtmlBAtB2kdYaSzvD2nZYTVOIyFwsjRm6NrfUqs+VRnu+WMm9uq6+0
        r5ojV+S0Lqaz1Ji5Nztp7VKW+0a1J9J037Gv0PZ+RogTM5nJhcDiLxJ0LqPhTmJY3VWKlcX+NcqVpK8p
        q45pJPkdPm5lJeDWxT8ATOQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAfs6c6fLzwlHmXMt1tuvWgPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAkTs+aXpa04w6a0zdY+3vbO8um72jcUlOEraEXUqr8FuEGlJbNNo
        jsm/s6f5q6X4mcWKnoSwOnnjbGo/vby9l3dOUfbHl/RI7HhNqm7rbcV/LE80/wCWmOaf5RLq+NXqrOgu
        Tb+aqOWn/NVMU0/zmHKZbT9firxNyOH4a4DF2dhO/qW2Lt6c6dtS7p1HGjF1Kklz1Jpb7Ntt77LZdNRj
        OFetsvY5a+s8ZRawtlXyN3Rnd0oV1a0ZctWtGm5c0oRlunJLZtNLdpnfdlZUrHWOV1plak44fReIus/X
        SS9O4hSlSoJbrrPetNxXrRstK3eSx3A/XvEatT/+X1zdw0xjop7d1Z0qbrXXLu/9EqMFT8dl3aOws6Gz
        q7cam9mJq+JVMRiIxTEYxGPOr7sR37Osv8Qv6K7VpbGJpo+HTEzmZmqqZzEznyp+9M9u+XI8AOGuJ4g6
        wq1NVSh8m8LYXeUyyje06NXuaNJtbbyUox55U057bJb9UcJ8QZS+z1PB4vHxur28qqFva2FaN1zOT9GE
        ZU3Lmf27+slnh7bV9MdnjWmpLanKWS1rlLPSONjFem4L56uorzU4tQ96R+8MMbj9IcDtb8VLiVRZO7va
        elLCrQ5ZVLaNSCqXMoNvaMp0n3amt3FOWye7RSnQ27lqzamMTy1XKp9PKPwpiY9al6uI3LV6/eicxzUW
        6KfLm2zPXvVMTOM4o2RxmeG2rsHjcZl7qwo1rTL3dWwtKlpdUrlTuabSnS+bk/STlH2Pfo3szd2PATif
        ks5jNPY/B29zdZixhkLKVG/oTo1aMu85Wqim4NvuavTffaEn9FNmBdan1XqarpfSeJtpWNnYt22Cs4Jv
        5y4qcsqzm1vOrOfjNbbOKUVFRSXddprVMsZxKttGaTyNe2stC4y3wNCtb1XTk5woqNV7p7rxcGvZL6z3
        xU6fRfCr1FXNy0zRGMxEzMxmrG3pOJx2z1Zq9VxD41Gmp5eeqK5ziZiIicU5iJ67xmM9c4nZh9nzQtre
        5vOa41JZ4+5xmi8XdZF211c0eStexXLb0qsJS6RdR77ySg+TZvboc9ls9rniTYY7RVXH425npz4bf3GQ
        pTg51e9lGVWvdXUpuDitoRUt4x2UV1ex1GP/AMzeytlL3bkvOIOoqNlHyc7Gyj3jkvZ3z5Wj8yeFraW7
        P+ksTh6Dll+J2UuLu7lHZTla2lRUqFu39R1J9770m/A5XweXTU2acxEUc9eOs81URTHTz+5jtmZx34fx
        5q1dV+rEzNz4dvPSOWmZrq6+X7zPfERmPKPNQ8PNVaXwOL1PmLKjTxebnUjjbmFzTqK6VPbnlGMZOSiu
        aK3aXV7eO5/eC4b6v1DZ2N9jsYlRylw7THd7VhTnfVk9nChBvmqbNpOUVyxfRtMlfjpp6pU1roHgtY3K
        Vnpuxx2BqV/CLyF041a80n1/haba8uifijV8dNU53T3HW7tdBV7rGU9DUYYjDRtN+a0t6FDao1t63KrK
        Un9Z7mHUcOsaWuuq5nlommnEYzzTGavLGIxMR3236s+l4rqNXbt02+XnrprriZzjlicUZ3zmrNMz2326
        IpsNL6gymdlpmwxNerk6dSpTqW6jtKm6e/eObfSCioycpNpRSbbSRl6m0PqLSVniclmLegrPOUJ3FhcU
        LinWp1oQm4T2lBvwkmv+q3T3JUxtvYaP7OF1rS/q3dbL8Qc3PHV7ilNd87ChvOpS72W7g6lVbzltLmSS
        afiRbrPVud1RXx9HLUY2lribGlZ42xpwcKdta7c0VFS3cnLm53OTbk5b77bHF1Gls6WzE1zPPVEVR2iJ
        nMZ/9d/eY22nPM02sv6u/MW4j4dNU0zPnM0xicb/APlt06RO+ZjHPAA6x24AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdXZ8Uta2Gjbrh/aX9lTwF7JVLm0+KrR97NbbT
        lUdLnc1yraXNutvE5QGS3euWZmbdUxmMTicbT5ezFdsWr8RF2mKsTmMxE4mOk7+cd25xOsdR4PT+a0vi
        sj8Hxmoo0I5KiqNNuvGjPnprncXOKUnvtFrfz3RmviPq16Kt9AO+pPD2latWt4O2p97SdXbvYxq8vPGM
        tuqT6pteDaOZBanUXqY5YrnGMdZ6Zzj2zvjvurVpbFc81VETOebpHWIxn3xtnts6nHcTNXYvSS0Va3ls
        8ZTup3tuqtpSqVbWvOHJOdGpKLlTbSXWLWz6rZ9RpjiXqvSeCyOmMbXs6+IylSFe4sb+xo3dB1ofRqqF
        WMlGa9a8dlvvsjlgWjV36ZiYrnMRiN52jpj2xsrVotNVE0zbjEzmdo3nrn3zvnu29jq7UOO1Pa6xtL9R
        y9lcU7q3ryo05qlUptd21CUXBKO0eWPLypJJJJIwstlchnMreZvLXMri9yFxUurmtJJOpVqScpyaWyW8
        m306GKDFN2uqnlmZxnP17+7LFq3TVzxTGcYzjy7e3olDjLq7TuT0/wAP9EaSyUL3H6WwEY3NSEJwj8Y3
        E3UukuZLdcyj1XR9TmHxN1jLS+O0hLI0nY4lV4WM3bU3Xtqdd81WnCty88YSfik+qbXg2nywOTe1167d
        quxPLmIjbMRiIiIj2jEfg4tjh9izapszHNyzNWZxM5mZmZ95zP4uk1dxE1ZrfUC1RnsjB5JVFXVa2oQt
        /nly/O7U0lzvkjvLx9GK32SSydYcU9Y65qV6+fubGVxeKCvbm2x9C2rXnLtt31SnCMqn0YvZvbeKe26T
        OSBjq1d+rmzXP3t53nefXuy06LTUcnLbiOTanaNo7R26R+DrMNxR1fhNKy0VRr2F3hvhTvaNtf463u42
        9w48rqUu9hLkbXR7dOr6btnMXV1c31zVvL24qV69ebqVKlSTlKcn4tt+LPkCld65cpimuqZiOmZ6L29P
        atVVV26YiZ3nEdfcABiZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAH//Z
</value>
  </data>
</root>